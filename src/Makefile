#############################################################################
# Makefile for building: src
# Generated by qmake (2.01a) (Qt 4.8.3) on: Sat Feb 2 17:37:44 2013
# Project:  src.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile src.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_SVG_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -std=c++11 -g -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4/QtSvg -I/usr/include/qt4 -I. -I. -I/usr/local/include/bullet -I/usr/X11R6/include -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -L/usr/X11R6/lib -L. -lOpenGLSupport -lGLU -lglut -lm -L/usr/local/lib -lBulletSoftBody -lBulletDynamics -lBulletCollision -lLinearMath -lQtSvg -lQtOpenGL -lQtGui -lQtCore -lGL -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = entity.cpp \
		entityhandler.cpp \
		glcanvas.cpp \
		ground.cpp \
		gui.cpp \
		main.cpp \
		objparser.cpp \
		openglobject.cpp \
		phys_main.cpp \
		pose.cpp \
		rocket.cpp \
		sensor.cpp \
		shapehandler.cpp \
		simulator.cpp \
		stlmesh.cpp \
		CcdPhysicsDemo.cpp moc_glcanvas.cpp \
		moc_gui.cpp
OBJECTS       = entity.o \
		entityhandler.o \
		glcanvas.o \
		ground.o \
		gui.o \
		main.o \
		objparser.o \
		openglobject.o \
		phys_main.o \
		pose.o \
		rocket.o \
		sensor.o \
		shapehandler.o \
		simulator.o \
		stlmesh.o \
		CcdPhysicsDemo.o \
		moc_glcanvas.o \
		moc_gui.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/link_pkgconfig.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		src.pro
QMAKE_TARGET  = src
DESTDIR       = 
TARGET        = src

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): /home/jay/Dropbox/cse503/ess/src/libOpenGLSupport.a $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: src.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/link_pkgconfig.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtSvg.prl \
		/usr/lib/x86_64-linux-gnu/libQtOpenGL.prl \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile src.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/link_pkgconfig.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/opengl.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtSvg.prl:
/usr/lib/x86_64-linux-gnu/libQtOpenGL.prl:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile src.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/src1.0.0 || $(MKDIR) .tmp/src1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/src1.0.0/ && $(COPY_FILE) --parents accelsensor.h DebugCastResult.h DemoApplication.h distancesensor.h entity.h entityhandler.h GL_DialogDynamicsWorld.h GL_DialogWindow.h GL_ShapeDrawer.h GL_Simplex1to4.h glcanvas.h GLDebugDrawer.h GLDebugFont.h GlutDemoApplication.h GlutStuff.h ground.h gui.h gyrosensor.h main.h networkhandler.h objparser.h openglobject.h physobject.h platform.h pose.h radar.h RenderTexture.h rocket.h sensor.h sensormessage.h shapehandler.h simulator.h stb_image.h stlmesh.h util.h Win32DemoApplication.h .tmp/src1.0.0/ && $(COPY_FILE) --parents entity.cpp entityhandler.cpp glcanvas.cpp ground.cpp gui.cpp main.cpp objparser.cpp openglobject.cpp phys_main.cpp pose.cpp rocket.cpp sensor.cpp shapehandler.cpp simulator.cpp stlmesh.cpp CcdPhysicsDemo.cpp .tmp/src1.0.0/ && (cd `dirname .tmp/src1.0.0` && $(TAR) src1.0.0.tar src1.0.0 && $(COMPRESS) src1.0.0.tar) && $(MOVE) `dirname .tmp/src1.0.0`/src1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/src1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_glcanvas.cpp moc_gui.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_glcanvas.cpp moc_gui.cpp
moc_glcanvas.cpp: glcanvas.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) glcanvas.h -o moc_glcanvas.cpp

moc_gui.cpp: entityhandler.h \
		entity.h \
		shapehandler.h \
		stlmesh.h \
		openglobject.h \
		pose.h \
		sensor.h \
		simulator.h \
		glcanvas.h \
		gui.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gui.h -o moc_gui.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

entity.o: entity.cpp entity.h \
		shapehandler.h \
		stlmesh.h \
		openglobject.h \
		pose.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o entity.o entity.cpp

entityhandler.o: entityhandler.cpp entityhandler.h \
		entity.h \
		shapehandler.h \
		stlmesh.h \
		openglobject.h \
		pose.h \
		sensor.h \
		objparser.h \
		ground.h \
		rocket.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o entityhandler.o entityhandler.cpp

glcanvas.o: glcanvas.cpp glcanvas.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o glcanvas.o glcanvas.cpp

ground.o: ground.cpp ground.h \
		entity.h \
		shapehandler.h \
		stlmesh.h \
		openglobject.h \
		pose.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ground.o ground.cpp

gui.o: gui.cpp gui.h \
		entityhandler.h \
		entity.h \
		shapehandler.h \
		stlmesh.h \
		openglobject.h \
		pose.h \
		sensor.h \
		simulator.h \
		glcanvas.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gui.o gui.cpp

main.o: main.cpp gui.h \
		entityhandler.h \
		entity.h \
		shapehandler.h \
		stlmesh.h \
		openglobject.h \
		pose.h \
		sensor.h \
		simulator.h \
		glcanvas.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

objparser.o: objparser.cpp objparser.h \
		openglobject.h \
		pose.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objparser.o objparser.cpp

openglobject.o: openglobject.cpp openglobject.h \
		pose.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o openglobject.o openglobject.cpp

phys_main.o: phys_main.cpp CcdPhysicsDemo.h \
		GlutDemoApplication.h \
		DemoApplication.h \
		GlutStuff.h \
		GL_ShapeDrawer.h \
		stlmesh.h \
		openglobject.h \
		pose.h \
		GLDebugDrawer.h \
		simulator.h \
		entityhandler.h \
		entity.h \
		shapehandler.h \
		sensor.h \
		rocket.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o phys_main.o phys_main.cpp

pose.o: pose.cpp pose.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pose.o pose.cpp

rocket.o: rocket.cpp rocket.h \
		entity.h \
		shapehandler.h \
		stlmesh.h \
		openglobject.h \
		pose.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o rocket.o rocket.cpp

sensor.o: sensor.cpp sensor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sensor.o sensor.cpp

shapehandler.o: shapehandler.cpp stlmesh.h \
		openglobject.h \
		pose.h \
		shapehandler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o shapehandler.o shapehandler.cpp

simulator.o: simulator.cpp simulator.h \
		entityhandler.h \
		entity.h \
		shapehandler.h \
		stlmesh.h \
		openglobject.h \
		pose.h \
		sensor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o simulator.o simulator.cpp

stlmesh.o: stlmesh.cpp stlmesh.h \
		openglobject.h \
		pose.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o stlmesh.o stlmesh.cpp

CcdPhysicsDemo.o: CcdPhysicsDemo.cpp CcdPhysicsDemo.h \
		GlutDemoApplication.h \
		DemoApplication.h \
		GlutStuff.h \
		GL_ShapeDrawer.h \
		stlmesh.h \
		openglobject.h \
		pose.h \
		GLDebugFont.h \
		GLDebugDrawer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CcdPhysicsDemo.o CcdPhysicsDemo.cpp

moc_glcanvas.o: moc_glcanvas.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_glcanvas.o moc_glcanvas.cpp

moc_gui.o: moc_gui.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gui.o moc_gui.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

